{"version":3,"sources":["layout/stepsForm.tsx","auth/auth-utils.js","layout/topBar/index.jsx","models/pizza-sizes.ts","layout/ui-elements/container.tsx","layout/ui-elements/row.tsx","components/pizza/editor/ingredientsSelect.tsx","components/pizza/editor/sizeSelect.tsx","components/pizza/editor/typeSelect.tsx","components/pizza/editor/pizzaEditor.tsx","components/pizza/preview/base/pizzaBase.tsx","components/pizza/preview/base/pizzaSauce.tsx","components/pizza/preview/base/pizzaSlices.jsx","components/pizza/preview/ingredients/pepperoni.tsx","components/pizza/preview/ingredients/italianSausages.tsx","components/pizza/preview/ingredients/olives.tsx","components/pizza/preview/ingredients/fetta.tsx","components/pizza/preview/ingredients/cheese.tsx","components/pizza/preview/pizzaPreview.jsx","components/home/index.tsx","auth/loginForm.jsx","auth/registerForm.jsx","auth/resetForm.jsx","router/protectedRoute.jsx","stores/pizzaStore.ts","stores/ingredientsStore.ts","router/routes.jsx","serviceWorker.ts","index.tsx"],"names":["Step","Steps","StepsForm","_ref","_ref$selectedStep","selectedStep","react","steps","current","title","fakeAuth","isAuthenticated","authenticate","cb","this","setTimeout","logout","Promise","resolve","reject","Header","Layout","withRouter","history","react_default","a","createElement","style","background","padding","boxShadow","width","zIndex","float","lineHeight","es_button","type","icon","onClick","then","push","PizzaSizes","small","medium","large","familiy","Container","styled","div","_templateObject","props","direction","justify","wrap","backgroundColor","Row","row_templateObject","IngredientsSelect","allIngredients","transfer","dataSource","titles","targetKeys","onChange","onIngredientsUpdated","render","item","React","SizeSelect","sizes","selectedSize","onSizeSelected","es_radio","Group","defaultValue","buttonStyle","size","Object","keys","map","key","Button","value","Option","Select","TypeSelect","pizzas","selectedType","onTypeSelected","es_select","showSearch","placeholder","id","optionFilterProp","pizza","PizzaEditor","allPizzas","pizzaStore","container","ui_elements_row","sizeSelect","selectedPizzaSize","typeSelect","ingredientsSelect","selectedPizza","selectedPizzaType","htmlType","className","block","PizzaBase","ReactKonva","x","y","radius","stroke","fill","PizzaSauce","PizzaSlices","sliceIndex","sceneFunc","context","shape","Array","from","slices","e","i","beginPath","moveTo","arc","pieAngle","lineWidth","sliceWidth","strokeStyle","spreadPepperoni","distanceFromEdges","piecesPerSpread","ang","Math","PI","cos","sin","Pepperoni","spread","spreadItalianSausages","ItalianSausages","spreadOlives","radiusX","radiusY","strokeWidth","Olives","spreadFetta","height","Fetta","Cheese","PizzaPreview","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","checkSize","offsetWidth","offsetHeight","setState","prevState","stageWidth","stageHeight","objectSpread","state","noOfSlices","window","addEventListener","removeEventListener","_this2","_this$state","ingredients","filter","ingredient","some","console","log","ingredientsMap","Italian Sausages","minHeight","ref","node","pizzaBase","pizzaSauce","Ingredient","pizzaSlices","Content","Home","inject","observer","target","onSlicesSelected","selectedPizzaID","toJS","nextTargetKeys","moveKeys","newIngredients","addIngredients","sideDrawerCollapsed","rightDrawerCollapased","childDrawerVisiblilty","_this$props","ingredientsStore","layout","topBar","margin","row","paddingBottom","col","span","stepsForm","flexWrap","pizzaEditor","pizzaPreview","Component","Login","redirectToReferrer","handleSubmit","preventDefault","form","validateFields","err","values","getFieldDecorator","location","pathname","react_router","to","marginTop","xs","md","lg","es_form","onSubmit","Item","rules","required","message","input","prefix","color","valuePropName","initialValue","es_checkbox","react_router_dom","LoginForm","Form","create","name","Register","RegisterForm","Reset","textAlign","divider","ResetForm","ProtectedRoute","component","rest","objectWithoutProperties","assign","singleton","p","length","observable","action","computed","appRoutes","path","exact","protected","Routes","mobx_react_module","PizzaStore","IngredientsStore","basename","route","protectedRoute","Boolean","hostname","match","ReactDOM","routes","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d9cea9a4.chunk.js","sourcesContent":["import * as React from 'react';\nimport { Steps } from 'antd';\n\nconst { Step } = Steps;\n\ninterface StepFormProps {\n    selectedStep?: number,\n}\n\nconst StepsForm: React.SFC<StepFormProps> = ({ selectedStep = 0 }) => {\n    return (\n        <Steps current={selectedStep}>\n            <Step title=\"Prepare\" />\n            <Step title=\"Review\" />\n            <Step title=\"Order\" />\n        </Steps>\n    );\n}\n\nexport default StepsForm;","const fakeAuth = {\n    isAuthenticated: true,\n    authenticate(cb) {\n        this.isAuthenticated = true;\n        setTimeout(cb, 100);\n    },\n    logout(cb) {\n        this.isAuthenticated = false;\n        setTimeout(cb, 100);\n        return new Promise(function(resolve, reject) {\n            resolve(true);\n        });\n    },\n};\n\nexport default fakeAuth;\n","import { Button, Layout } from \"antd\";\nimport React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport fakeAuth from \"../../auth/auth-utils\";\n\nconst { Header } = Layout;\n\nconst TopBar = ({ history }) => {\n  return (\n    <Header style={{\n      background: \"#fff\", padding: 0,\n      boxShadow: '2px 2px 5px rgba(0,0,0, .05)',\n      width: '100%',\n      zIndex: 9999,\n    }}>\n      <span style={{ float: \"right\", lineHeight: \"60px\" }}>\n        <Button\n          type=\"link\"\n          icon=\"logout\"\n          onClick={() => {\n            fakeAuth.logout().then(history.push(\"/login\"));\n          }}\n        >\n          Logout\n      </Button>\n      </span>\n    </Header >\n  );\n};\n\nexport default withRouter(TopBar);\n","const PizzaSizes = {\n    small: \"SMALL\", medium: \"MEDIUM\", large: \"LARGE\", familiy: \"FAMILY\"\n};\n\nexport default PizzaSizes;","import styled from 'styled-components';\n\nconst Container = styled.div<any>`\n    display: flex;\n    flex-direction: ${props => props.direction && props.direction};\n    justify-content: ${props => props.justify && props.justify};\n    flex-wrap: ${props => props.wrap && props.wrap};\n    padding: ${props => props.padding && props.padding};\n    background-color: ${props => props.backgroundColor && props.backgroundColor};\n`;\n\nexport default Container;","import styled from 'styled-components';\n\nconst Row = styled.div<any>`\n    display: flex;\n    flex: 1;\n    min-width: 100%;\n    margin-bottom: 1em;\n`;\n\nexport default Row;","import { Transfer } from 'antd';\nimport * as React from 'react';\nimport Ingredient from '../../../models/ingredient';\nimport { toJS } from 'mobx';\nimport PizzaType from '../../../models/pizza-type';\n\ninterface IngredientsSelectProps {\n    allIngredients: Ingredient[],\n    selectedPizza: PizzaType,\n    pizzaStore: any,\n    onIngredientsUpdated: any,\n    targetKeys: string[]\n}\n\nclass IngredientsSelect extends React.Component<IngredientsSelectProps> {\n\n    render() {\n        const { allIngredients } = this.props;\n        return (\n            <div>\n                <Transfer\n                    dataSource={allIngredients as any}\n                    titles={['Available', 'On Pizza']}\n                    targetKeys={this.props.targetKeys}\n                    onChange={this.props.onIngredientsUpdated}\n                    render={item => item.title}\n                />\n            </div>\n        );\n    }\n}\n\nexport default IngredientsSelect;","import * as React from 'react';\nimport { Radio } from 'antd';\nimport { RadioChangeEvent } from 'antd/lib/radio';\n\nexport interface SizeSelectProps {\n    sizes: any,\n    selectedSize: string,\n    onSizeSelected: (event: RadioChangeEvent) => void,\n}\n\nconst SizeSelect: React.SFC<SizeSelectProps> = ({ sizes, selectedSize, onSizeSelected }) => {\n    return (\n        <Radio.Group\n            defaultValue={selectedSize}\n            buttonStyle=\"solid\"\n            size=\"large\"\n            onChange={onSizeSelected}\n        >\n            {\n                Object.keys(sizes).map(key => <Radio.Button key={sizes[key]} value={sizes[key]}>{sizes[key]}</Radio.Button>)\n            }\n        </Radio.Group>\n    );\n}\n\nexport default SizeSelect;","import * as React from 'react';\nimport { Select } from 'antd';\nimport PizzaType from '../../../models/pizza-type';\nconst { Option } = Select;\n\nexport interface TypeSelectProps {\n    pizzas: PizzaType[],\n    selectedType: PizzaType,\n    onTypeSelected: (selectedPizzaID: string) => void,\n}\n\n\nconst TypeSelect: React.SFC<TypeSelectProps> = ({ pizzas, selectedType, onTypeSelected }) => {\n    return (\n        <Select\n            showSearch\n            style={{ width: '100%' }}\n            placeholder=\"Select a Pizza\"\n            defaultValue={selectedType.id}\n            optionFilterProp=\"children\"\n            onChange={onTypeSelected}\n            size=\"large\"\n        >\n            {pizzas.map(pizza => <Option key={pizza.id} value={pizza.id}>{pizza.title}</Option>)}\n        </Select>\n    );\n}\n\nexport default TypeSelect;","import { Button } from \"antd\";\nimport { RadioChangeEvent } from 'antd/lib/radio';\nimport * as React from 'react';\nimport { Container, Row } from '../../../layout/ui-elements';\nimport Ingredient from '../../../models/ingredient';\nimport PizzaSizes from '../../../models/pizza-sizes';\nimport PizzaType from \"../../../models/pizza-type\";\nimport IngredientsSelect from \"./ingredientsSelect\";\nimport SizeSelect from './sizeSelect';\nimport TypeSelect from \"./typeSelect\";\n\ninterface PizzaEditorProps {\n    allPizzas: PizzaType[],\n    allIngredients: Ingredient[],\n    pizza: {\n        selectedPizzaType: PizzaType,\n        selectedPizzaSize: string,\n        noOfSlices: number,\n    },\n    pizzaStore: any,\n    onSizeSelected: (event: RadioChangeEvent) => void,\n    onSlicesSelected: (event: RadioChangeEvent) => void,\n    onTypeSelected: (selectedPizzaID: string) => void,\n    onIngredientsUpdated: any,\n    targetKeys: string[],\n}\n\nconst PizzaEditor = (props: PizzaEditorProps) => {\n    const { pizza, allPizzas, allIngredients, onSizeSelected, onIngredientsUpdated, onTypeSelected, pizzaStore, targetKeys } = props;\n    return (\n        <Container direction=\"column\" justify=\"center\" wrap=\"no-wrap\" >\n            <Row>\n                <SizeSelect\n                    sizes={PizzaSizes}\n                    selectedSize={pizza.selectedPizzaSize}\n                    onSizeSelected={onSizeSelected}\n                />\n            </Row>\n            {/* <Row>\n                <SlicesSelect\n                    selectedSlices={pizza.noOfSlices}\n                    onSlicesSelected={onSlicesSelected}\n                />\n            </Row> */}\n            <Row>\n                <TypeSelect\n                    pizzas={allPizzas}\n                    selectedType={allPizzas[0]}\n                    onTypeSelected={onTypeSelected}\n                />\n            </Row>\n            <Row>\n                <IngredientsSelect\n                    selectedPizza={pizza.selectedPizzaType}\n                    allIngredients={allIngredients}\n                    pizzaStore={pizzaStore}\n                    targetKeys={targetKeys}\n                    onIngredientsUpdated={onIngredientsUpdated}\n                />\n            </Row>\n            <Row>\n                <Button\n                    type=\"primary\"\n                    htmlType=\"submit\"\n                    className=\"login-form-button\"\n                    block\n                >\n                    Continue\n              </Button>\n            </Row>\n        </Container>\n    );\n}\n\nexport default PizzaEditor;","import * as React from 'react';\nimport { Circle } from \"react-konva\";\n\nexport interface PizzaBaseProps {\n    pizza: any\n}\n\nconst PizzaBase: React.SFC<PizzaBaseProps> = ({ pizza }) => {\n    return (\n        <Circle x={pizza.x} y={pizza.y} radius={pizza.radius} stroke=\"#FEDDBC\" fill=\"#FEDDBC\" />\n    );\n}\n\nexport default PizzaBase;","import * as React from 'react';\nimport { Circle } from \"react-konva\";\n\nexport interface PizzaSauceProps {\n    pizza: any\n}\n\nconst PizzaSauce: React.SFC<PizzaSauceProps> = ({ pizza }) => {\n    return (\n        <Circle x={pizza.x} y={pizza.y} radius={pizza.radius - ((10 / 100) * pizza.radius)} stroke=\"#DB6D2C\" fill=\"#DB6D2C\" />\n    );\n}\n\nexport default PizzaSauce;","import * as React from 'react';\nimport { Shape } from \"react-konva\";\n\nconst PizzaSlices = ({ pizza, sliceIndex }) => {\n    return (\n        <Shape\n            sceneFunc={(context, shape) => {\n                Array.from(Array(pizza.slices), (e, i) => {\n                    context.beginPath();\n                    context.moveTo(pizza.x, pizza.y);\n                    context.arc(\n                        pizza.x,\n                        pizza.y,\n                        pizza.radius,\n                        i * pizza.pieAngle,\n                        (i + 1) * pizza.pieAngle,\n                        false\n                    );\n                    context.lineWidth = pizza.sliceWidth;\n                    context.lineWidth = (2 / 100) * pizza.radius;\n                    context.strokeStyle = \"#ffffff\";\n                    context.stroke();\n                    return context;\n                });\n            }}\n        />\n    );\n};\n\nexport default PizzaSlices;","import * as React from 'react';\nimport { Circle } from \"react-konva\";\n\nexport interface PepperoniProps {\n    pizza: any,\n    spread: boolean\n}\n\nconst spreadPepperoni = (pizza: any, distanceFromEdges: number, piecesPerSpread: number) => {\n    return Array.from(Array(pizza.slices * 2), (e, i) => {\n        const ang = i * ((Math.PI * 2) / piecesPerSpread);\n        const x =\n            Math.cos(ang) * (pizza.radius - (distanceFromEdges / 100) * pizza.radius) +\n            pizza.x;\n        const y =\n            Math.sin(ang) * (pizza.radius - (distanceFromEdges / 100) * pizza.radius) +\n            pizza.y;\n        return <Circle key={i} x={x} y={y} radius={(10 / 100) * pizza.radius} stroke=\"#BC4415\" fill=\"#E55452\" />;\n    })\n}\n\nconst Pepperoni: React.SFC<PepperoniProps> = ({ pizza, spread }) => {\n    return (\n        <React.Fragment>\n            {spread && spreadPepperoni(pizza, 25, pizza.slices * 2)}\n            {spread && spreadPepperoni(pizza, 55, pizza.slices)}\n        </React.Fragment>\n    )\n};\n\nexport default Pepperoni;\n","import * as React from 'react';\nimport { Circle } from \"react-konva\";\n\nexport interface ItalianSausagesProps {\n    pizza: any,\n    spread: boolean,\n}\n\n\nconst spreadItalianSausages = (pizza: any, distanceFromEdges: number, piecesPerSpread: number) => {\n    return Array.from(Array(pizza.slices * 2), (e, i) => {\n        const ang = i * ((Math.PI * 2) / piecesPerSpread) + 30;\n        const x =\n            Math.cos(ang) * (pizza.radius - (distanceFromEdges / 100) * pizza.radius) +\n            pizza.x;\n        const y =\n            Math.sin(ang) * (pizza.radius - (distanceFromEdges / 100) * pizza.radius) +\n            pizza.y;\n        return <Circle key={i} x={x} y={y} radius={(6 / 100) * pizza.radius} stroke=\"#811403\" fill=\"#BA534E\" />\n    })\n}\n\nconst ItalianSausages: React.SFC<ItalianSausagesProps> = ({ pizza, spread }) => {\n    return (\n        <React.Fragment>\n            {spread && spreadItalianSausages(pizza, 19, pizza.slices * 2)}\n            {spread && spreadItalianSausages(pizza, 45, pizza.slices)}\n            {spread && spreadItalianSausages(pizza, 75, pizza.slices / 2)}\n        </React.Fragment>\n    )\n};\n\nexport default ItalianSausages;\n","import * as React from 'react';\nimport { Ellipse } from \"react-konva\";\n\nexport interface OlivesProps {\n    pizza: any,\n    spread: boolean,\n}\n\nconst spreadOlives = (pizza: any, distanceFromEdges: number, piecesPerSpread: number) => {\n    return Array.from(Array(pizza.slices * 2), (e, i) => {\n        const ang = i * ((Math.PI * 2) / piecesPerSpread) + 80;\n        const x =\n            Math.cos(ang) * (pizza.radius - (distanceFromEdges / 100) * pizza.radius) +\n            pizza.x;\n        const y =\n            Math.sin(ang) * (pizza.radius - (distanceFromEdges / 100) * pizza.radius) +\n            pizza.y;\n        return <Ellipse key={i} x={x} y={y} radiusX={(2 / 100) * pizza.radius} radiusY={(3 / 100) * pizza.radius} stroke=\"#101A00\" strokeWidth={7} />;\n    })\n}\n\nconst Olives: React.SFC<OlivesProps> = ({ pizza, spread }) => {\n    return (\n        <React.Fragment>\n            {spread && spreadOlives(pizza, 35, pizza.slices / 5)}\n            {spread && spreadOlives(pizza, 75, pizza.slices / 4)}\n        </React.Fragment>\n    )\n};\n\nexport default Olives;","import * as React from 'react';\nimport { Rect } from \"react-konva\";\n\nexport interface FettaProps {\n    pizza: any,\n    spread: boolean,\n}\n\nconst spreadFetta = (pizza: any, distanceFromEdges: number, piecesPerSpread: number) => {\n    return Array.from(Array(pizza.slices * 2), (e, i) => {\n        const ang = i * ((Math.PI * 2) / piecesPerSpread) + 10;\n        const size = (7 / 100) * pizza.radius;\n        const x =\n            Math.cos(ang) * (pizza.radius - (distanceFromEdges / 100) * pizza.radius) +\n            pizza.x;\n        const y =\n            Math.sin(ang) * (pizza.radius - (distanceFromEdges / 100) * pizza.radius) +\n            pizza.y;\n        return <Rect key={i} x={x} y={y} width={size} height={size} fill=\"#F8EFFF\" />\n    })\n}\n\nconst Fetta: React.SFC<FettaProps> = ({ pizza, spread }) => {\n    return (\n        <React.Fragment>\n            {spread && spreadFetta(pizza, 25, pizza.slices * 2)}\n            {spread && spreadFetta(pizza, 55, pizza.slices)}\n        </React.Fragment>\n    )\n};\n\nexport default Fetta;","import * as React from 'react';\nimport { Circle } from \"react-konva\";\n\nexport interface CheeseProps {\n    pizza: any,\n    spread: boolean,\n}\n\nconst Cheese: React.SFC<CheeseProps> = ({ pizza, spread }) => {\n    return spread ? <Circle x={pizza.x} y={pizza.y} radius={pizza.radius - ((13 / 100) * pizza.radius)} fill=\"#F7EDB0\" /> : <React.Fragment />;\n};\n\nexport default Cheese;","import * as React from 'react';\nimport { Layer, Stage } from 'react-konva';\nimport { PizzaBase, PizzaSauce, PizzaSlices } from './base';\nimport { Pepperoni, Fetta, Olives, Cheese, ItalianSausages } from './ingredients/';\n\nclass PizzaPreview extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.container = React.createRef();\n        this.state = {\n            stageWidth: 0,\n            stageHeight: 0,\n            pizza: {\n                x: 0,\n                y: 0,\n                radius: 0,\n                slices: this.props.selectedPizza.noOfSlices,\n                sliceWidth: 360 / this.props.selectedPizza.noOfSlices,\n                pieAngle: (2 * Math.PI) / this.props.selectedPizza.noOfSlices\n            },\n            container: React.createRef(),\n        };\n    }\n\n    componentDidMount() {\n        this.checkSize();\n        window.addEventListener(\"resize\", this.checkSize);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"resize\", this.checkSize);\n    }\n\n    checkSize = () => {\n        const width = this.container.offsetWidth;\n        const height = this.container.offsetHeight;\n\n        // if width becomes less than height, then make pizza fit to with otherwise fit to height\n        let radius = height / 2;\n        if ((width / 2) < (radius)) {\n            radius = width / 2;\n        }\n\n        this.setState(prevState => ({\n            stageWidth: width,\n            stageHeight: height,\n            pizza: {\n                ...prevState.pizza,\n                x: width / 2,\n                y: height / 2,\n                radius: radius,\n            }\n        }))\n    };\n\n    render() {\n        const { stageWidth, stageHeight, pizza } = this.state;\n        // const { selectedPizza } = this.props;\n        // const ingredients = selectedPizza.selectedPizzaType.ingredients;\n        const ingredients = this.props.allIngredients.filter(ingredient => this.props.targetKeys.some((key) => ingredient.key === key));\n        console.log(ingredients);\n\n        const ingredientsMap = {\n            \"Cheese\": Cheese,\n            \"Olives\": Olives,\n            \"Italian Sausages\": ItalianSausages,\n            \"Pepperoni\": Pepperoni,\n            \"Fetta\": Fetta\n        }\n\n        return (\n            <div\n                style={{\n                    width: '100%',\n                    minHeight: '50em'\n                }}\n                ref={node => {\n                    this.container = node;\n                }}>\n                <Stage width={stageWidth} height={stageHeight}>\n                    <Layer>\n                        <PizzaBase pizza={pizza} spread />\n                        <PizzaSauce pizza={pizza} spread />\n                        {\n                            Object.keys(ingredientsMap).map(key => {\n                                if (ingredients.some(i => i.title === key)) {\n                                    const Ingredient = ingredientsMap[key];\n                                    return <Ingredient key={key} pizza={pizza} spread />\n                                }\n                                return <React.Fragment />;\n                            })\n                        }\n                        <PizzaSlices pizza={pizza} spread />\n\n                    </Layer>\n                </Stage>\n            </div>\n        );\n    }\n}\n\nexport default PizzaPreview;","import { Col, Layout, Row } from \"antd\";\nimport { RadioChangeEvent } from \"antd/lib/radio\";\nimport { toJS } from \"mobx\";\nimport { inject, observer } from \"mobx-react\";\nimport React from \"react\";\nimport StepsForm from \"../../layout/stepsForm\";\nimport TopBar from \"../../layout/topBar\";\nimport PizzaSizes from '../../models/pizza-sizes';\nimport PizzaType from \"../../models/pizza-type\";\nimport PizzaEditor from \"../pizza/editor/pizzaEditor\";\nimport PizzaPreview from \"../pizza/preview/pizzaPreview.jsx\";\nimport Ingredient from \"../../models/ingredient\";\nconst { Content } = Layout;\n\ninterface HomeProps {\n  pizzaStore: any,\n  ingredientsStore: any,\n}\n\ninterface HomeState {\n  sideDrawerCollapsed: boolean,\n  rightDrawerCollapased: boolean,\n  childDrawerVisiblilty: boolean,\n  pizza: {\n    selectedPizzaType: PizzaType,\n    selectedPizzaSize: string,\n    noOfSlices: number,\n  },\n  targetKeys: string[],\n}\n\n@inject(\"pizzaStore\", \"ingredientsStore\")\n@observer\nclass Home extends React.Component<HomeProps, HomeState> {\n  constructor(props: HomeProps) {\n    super(props);\n    this.state = {\n      sideDrawerCollapsed: false,\n      rightDrawerCollapased: false,\n      childDrawerVisiblilty: false,\n      pizza: {\n        selectedPizzaType: this.props.pizzaStore.selectedPizza,\n        selectedPizzaSize: PizzaSizes.small,\n        noOfSlices: 6,\n      },\n      targetKeys: this.props.pizzaStore.selectedPizza.ingredients.map((i: Ingredient) => i.key)\n    };\n  }\n\n  onSizeSelected = (e: RadioChangeEvent) => {\n    this.setState(prevState => ({\n      pizza: {\n        ...prevState.pizza,\n        selectedPizzaSize: e.target.value\n      }\n    }))\n  }\n\n  onSlicesSelected = (e: RadioChangeEvent) => {\n    this.setState(prevState => ({\n      pizza: {\n        ...prevState.pizza,\n        noOfSlices: e.target.value\n      }\n    }))\n  }\n\n  onTypeSelected = (selectedPizzaID: string) => {\n    const selectedPizza: PizzaType = this.props.pizzaStore.pizzas.filter((pizza: PizzaType) => pizza.id === selectedPizzaID)[0];\n    console.log(\"Selected Pizza\", toJS(selectedPizza));\n    this.setState(prevState => ({\n      pizza: {\n        ...prevState.pizza,\n        selectedPizzaType: selectedPizza\n      },\n      targetKeys: selectedPizza.ingredients.map((i: Ingredient) => i.key)\n    }))\n  }\n\n  onIngredientsUpdated = (nextTargetKeys: string[], direction: any, moveKeys: any) => {\n    this.setState({ targetKeys: nextTargetKeys });\n    const newIngredients = this.state.pizza.selectedPizzaType.ingredients.filter(\n      ingredient => nextTargetKeys.some((key: string) => ingredient.key === key));\n    this.props.pizzaStore.addIngredients(this.state.pizza.selectedPizzaType, newIngredients);\n  };\n\n\n  render() {\n    const { pizzaStore, ingredientsStore } = this.props;\n    return (\n      <Layout\n        style={{\n          minHeight: \"100vh\"\n        }}\n      >\n        <TopBar />\n\n        <Content>\n          <Layout style={{ margin: '40px', padding: '20px', background: '#fff' }}>\n            <Row type=\"flex\" justify=\"center\" style={{ paddingBottom: '2%' }}>\n              <Col span={12}>\n                <StepsForm selectedStep={0} />\n              </Col>\n            </Row>\n            <Row type=\"flex\" justify=\"space-around\" style={{ flexWrap: 'wrap' }}>\n              <Col style={{ padding: '10px' }}>\n                <PizzaEditor\n                  allPizzas={pizzaStore.pizzas}\n                  allIngredients={ingredientsStore.ingredients}\n                  pizza={this.state.pizza}\n                  onSizeSelected={this.onSizeSelected}\n                  onTypeSelected={this.onTypeSelected}\n                  onSlicesSelected={this.onSlicesSelected}\n                  pizzaStore={pizzaStore}\n                  onIngredientsUpdated={this.onIngredientsUpdated}\n                  targetKeys={this.state.targetKeys}\n                />\n              </Col>\n              <Col span={14} style={{\n                padding: '2vh', boxShadow: '-3px 2px 13px -5px rgba(0,0,0,0.27)'\n              }}>\n                <h3>Preview: </h3>\n                <PizzaPreview selectedPizza={this.state.pizza} targetKeys={this.state.targetKeys} allIngredients={ingredientsStore.ingredients} />\n              </Col>\n            </Row>\n          </Layout>\n        </Content>\n      </Layout >\n    );\n  }\n}\n\nexport default Home;\n","import React from \"react\";\nimport { Row, Col, Form, Icon, Input, Button, Checkbox } from \"antd\";\nimport { Redirect, Link, withRouter } from \"react-router-dom\";\nimport fakeAuth from \"../auth/auth-utils\";\n\nclass Login extends React.Component {\n  state = {\n    redirectToReferrer: false\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n        this.authenticate();\n      }\n    });\n  };\n\n  authenticate = () => {\n    fakeAuth.authenticate(() => {\n      this.setState(() => ({\n        redirectToReferrer: true\n      }));\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    const { from } = this.props.location.state || { from: { pathname: \"/\" } };\n    const { redirectToReferrer } = this.state;\n\n    if (redirectToReferrer === true) {\n      return <Redirect to={from} />;\n    }\n\n    return (\n      <Row type=\"flex\" justify=\"center\" style={{ marginTop: \"10vh\" }}>\n        <Col xs={{ span: 12 }} md={{ span: 8 }} lg={{ span: 6 }}>\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <Form.Item>\n              {getFieldDecorator(\"email\", {\n                rules: [{ required: true, message: \"Please input your Email!\" }]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Email Address\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  { required: true, message: \"Please input your Password!\" }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator(\"remember\", {\n                valuePropName: \"checked\",\n                initialValue: true\n              })(<Checkbox>Remember me</Checkbox>)}\n              <Link className=\"login-form-forgot\" to=\"/reset\">\n                Forgot password\n              </Link>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                block\n              >\n                Log in\n              </Button>\n            </Form.Item>\n            <Form.Item>\n              Don't have an account? <Link to=\"/register\">register now!</Link>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst LoginForm = Form.create({ name: \"normal_login\" })(Login);\nexport default withRouter(LoginForm);\n","import React from \"react\";\nimport { Row, Col, Form, Icon, Input, Button } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nclass Register extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Row type=\"flex\" justify=\"center\" style={{ marginTop: \"10vh\" }}>\n        <Col xs={{ span: 12 }} md={{ span: 8 }} lg={{ span: 6 }}>\n          <Form onSubmit={this.handleSubmit} className=\"login-form\">\n            <Form.Item>\n              {getFieldDecorator(\"name\", {\n                rules: [{ required: true, message: \"Please input your Name!\" }]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"user\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Name\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator(\"email\", {\n                rules: [{ required: true, message: \"Please input your Email!\" }]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Email Address\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              {getFieldDecorator(\"password\", {\n                rules: [\n                  { required: true, message: \"Please input your Password!\" }\n                ]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"lock\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  type=\"password\"\n                  placeholder=\"Password\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"login-form-button\"\n                block\n              >\n                Register\n              </Button>\n            </Form.Item>\n            <Form.Item>\n              Already have an account?{\" \"}\n              <Link to=\"/login\" className=\"login-form-forgot\">\n                Login Here!\n              </Link>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst RegisterForm = Form.create({ name: \"normal_login\" })(Register);\nexport default RegisterForm;\n","import React from \"react\";\nimport { Row, Col, Form, Icon, Input, Button, Divider } from \"antd\";\nimport { Link } from \"react-router-dom\";\n\nclass Reset extends React.Component {\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\"Received values of form: \", values);\n      }\n    });\n  };\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Row type=\"flex\" justify=\"center\" style={{ marginTop: \"10vh\" }}>\n        <Col xs={{ span: 12 }} md={{ span: 8 }} lg={{ span: 6 }}>\n          <Form onSubmit={this.handleSubmit} className=\"Reset-form\">\n            <Form.Item>\n              {getFieldDecorator(\"email\", {\n                rules: [{ required: true, message: \"Please input your Email!\" }]\n              })(\n                <Input\n                  prefix={\n                    <Icon type=\"mail\" style={{ color: \"rgba(0,0,0,.25)\" }} />\n                  }\n                  placeholder=\"Email Address\"\n                />\n              )}\n            </Form.Item>\n            <Form.Item>\n              <Button\n                type=\"primary\"\n                htmlType=\"submit\"\n                className=\"Reset-form-button\"\n                block\n              >\n                Send Reset Link\n              </Button>\n            </Form.Item>\n            <Form.Item style={{ textAlign: \"center\" }}>\n              <Icon type=\"user-add\" />\n              <Link to=\"/register\">Register</Link>\n              <Divider type=\"vertical\" />\n              <Icon type=\"login\" />\n              <Link to=\"/login\">Login</Link>\n            </Form.Item>\n          </Form>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nconst ResetForm = Form.create({ name: \"normal_Reset\" })(Reset);\nexport default ResetForm;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport fakeAuth from \"../auth/auth-utils\";\n\nconst ProtectedRoute = ({ component: Component, ...rest }) => (\n  <Route\n    {...rest}\n    render={props =>\n      fakeAuth.isAuthenticated === true ? (\n        <Component {...props} />\n      ) : (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n            state: { from: props.location }\n          }}\n        />\n      )\n    }\n  />\n);\n\nexport default ProtectedRoute;\n","import { action, computed, observable, toJS } from \"mobx\";\nimport Ingredient from \"../models/ingredient\";\nimport PizzaType from '../models/pizza-type';\n\nclass PizzaStore {\n  @observable pizzas: PizzaType[] = [\n      {\n          id: 'cheese_lovers',\n          title: 'Cheese Lover',\n          ingredients: [\n              {\n                key: '0',\n                id: '0',\n                title: 'Cheese'\n              },\n              {\n                key: '1',\n                id: '1',\n                title: 'Fetta'\n              }\n          ]\n      },\n      {\n          id: 'bbq_meat_lovers',\n          title: 'BBQ Meat Lovers',\n          ingredients: [\n              {\n                key: '0',\n                id: '0',\n                title: 'Cheese'\n              },\n              {\n                key: '2',\n                id: '2',\n                title: 'Italian Sausages'\n              },\n              {\n                key: '3',\n                id: '3',\n                title: 'Pepperoni'\n              }\n          ]\n      }\n  ];\n  @observable selectedPizza: PizzaType = this.pizzas[0];\n  \n  @action\n  addPizza = (pizza: PizzaType) => {\n    this.pizzas.push(pizza);\n  };\n\n  @action addIngredients(pizza: PizzaType, ingredients: Ingredient[]){\n    this.pizzas.map((p: PizzaType) => {\n      if(p.id === pizza.id){\n        p.ingredients = ingredients;\n        console.log(toJS(p));\n      }\n      return p;\n    });\n  }\n\n  @action updateSelected(pizza: PizzaType){\n    this.selectedPizza = pizza;\n  }\n\n  @computed\n  get pizzaCount() {\n    return this.pizzas.length;\n  }\n}\n\nconst singleton = new PizzaStore();\nexport default singleton;","import { observable } from \"mobx\";\nimport IngredientsType from '../models/ingredient';\n\nclass IngredientsStore {\n  @observable ingredients: IngredientsType[] = [\n              {\n                key: '0',\n                id: '0',\n                title: 'Cheese'\n              },\n              {\n                key: '1',\n                id: '1',\n                title: 'Fetta'\n              },\n              {\n                key: '2',\n                id: '2',\n                title: 'Italian Sausages'\n              },\n              {\n                key: '3',\n                id: '3',\n                title: 'Pepperoni'\n              },\n              {\n                key: '4',\n                id: '4',\n                title: 'Olives'\n              }\n  ];\n}\n\nconst singleton = new IngredientsStore();\nexport default singleton;","import React from \"react\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport Home from \"../components/home/\";\nimport { LoginForm, RegisterForm, ResetForm } from \"../auth\";\nimport ProtectedRoute from \"./protectedRoute\";\nimport { Provider } from \"mobx-react\";\nimport PizzaStore from \"../stores/pizzaStore\";\nimport IngredientsStore from \"../stores/ingredientsStore\";\n\nconst appRoutes = [\n  {\n    path: \"/\",\n    component: Home,\n    exact: true,\n    protected: true\n  },\n  {\n    path: \"/login\",\n    component: LoginForm\n  },\n  {\n    path: \"/register\",\n    component: RegisterForm\n  },\n  {\n    path: \"/reset\",\n    component: ResetForm\n  },\n  {\n    path: \"/logout\",\n    component: LoginForm\n  }\n];\n\nconst Routes = () => {\n  return (\n    <Provider pizzaStore={PizzaStore} ingredientsStore={IngredientsStore}>\n      <Router basename=\"/\">\n        {appRoutes.map(route =>\n          route.protected ? (\n            <ProtectedRoute\n              key={route.path}\n              path={route.path}\n              component={route.component}\n              exact={route.exact}\n            />\n          ) : (\n              <Route\n                key={route.path}\n                path={route.path}\n                component={route.component}\n                exact={route.exact}\n              />\n            )\n        )}\n      </Router>\n    </Provider >\n  );\n};\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"antd/dist/antd.css\";\nimport './index.css';\nimport Routes from './router/routes';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Routes />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}